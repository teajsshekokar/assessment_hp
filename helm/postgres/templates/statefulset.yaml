apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-postgres
spec:
  serviceName: "{{ .Release.Name }}-postgres"
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-postgres
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-postgres
    spec:
      containers:
      - name: postgres
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        env:
        - name: POSTGRES_USER
          value: "{{ .Values.postgresql.username }}"
        - name: POSTGRES_PASSWORD
          value: "{{ .Values.postgresql.password }}"
        - name: POSTGRES_DB
          value: "{{ .Values.postgresql.database }}"
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-postgres-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-postgres
spec:
  selector:
    app: {{ .Release.Name }}-postgres
  ports:
  - protocol: TCP
    port: {{ .Values.service.port }}
    targetPort: 5432
  type: {{ .Values.service.type }}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-postgres-pvc
spec:
  accessModes:
    {{- range .Values.persistence.accessModes }}
    - {{ . }}
    {{- end }}
  resources:
    requests:
      storage: {{ .Values.persistence.size }}
